/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.Conn;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author usuario
 */
public class FormBackUp extends javax.swing.JFrame {

    Conn conn;

    /**
     * Creates new form FormBackUp
     */
    public FormBackUp() {
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation((d.width - 642) / 2, (d.height - 155) / 2);
        initComponents();
        setTitle("Backup");
        conn = new Conn();
        jButton1.setText("Hacer copia de seguridad");
        jButton1.setIcon(new ImageIcon(getClass().getResource("/Vista/Imagenes/backup.png")));
        jButton2.setIcon(new ImageIcon(getClass().getResource("/Vista/Im\341genes/restore.png")));
        jButton2.setText("Restaurar desde una copia de seguridad");
        jButton3.setText("Volver");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(33, 33, 33)
                .addComponent(jButton3)
                .addContainerGap(78, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(219, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivo de texto (.txt)", new String[]{
            "txt"
        });
        jfc.setFileFilter(filtro);
        jfc.showSaveDialog(this);
        try {
            if (jfc.getSelectedFile() != null) {
                File f = jfc.getSelectedFile();
                String ruta = (new StringBuilder()).append(f.getAbsolutePath()).append(".txt").toString();
                conn.guardarRegistros(ruta);
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Ocurri\363 un error con el manejador de archivo (JFileChooser).", "Error de archivo", 0);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos de texto (.txt)", new String[]{
            "txt"
        });
        jfc.setFileFilter(filtro);
        jfc.showOpenDialog(this);
        try {
            if (jfc.getSelectedFile() != null) {
                File f = jfc.getSelectedFile();
                String ruta = f.getAbsolutePath();
                conn.ejecutar("BEGIN; DELETE FROM minicontroles; DELETE FROM historias; DELETE FROM pacientes;");
                try {
                    conn.restaurar(abrirArchivo(ruta));
                    conn.ejecutar((new StringBuilder()).append("SELECT setval ('secuencia',").append((String) conn.reporteSQL("SELECT coalesce(max(historia_id)+1,1) FROM historias").remove()).append(");").toString());
                    conn.ejecutar((new StringBuilder()).append("SELECT setval ('secuencia_minicontroles',").append((String) conn.reporteSQL("SELECT coalesce(max(minicontrol_id)+1,1) FROM minicontroles;").remove()).append(");").toString());
                } catch (Exception e) {
                    conn.ejecutar("ROLLBACK;");
                    System.out.println("xxxxx");
                }
            }
        } catch (HeadlessException e) {
            conn.ejecutar("ROLLBACK;");
            JOptionPane.showMessageDialog(null, (new StringBuilder()).append("Error en la lectura del archivo.\n").append(e.toString()).toString(), "Error", 0);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormBackUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormBackUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormBackUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormBackUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormBackUp().setVisible(true);
            }
        });
    }

    public String abrirArchivo(String ruta) {
        FileReader fr = null;
        String salida = "";
        File archivo = new File(ruta);
        try {
            fr = new FileReader(archivo);
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        BufferedReader br = new BufferedReader(fr);
        String linea;
        try {
            while ((linea = br.readLine()) != null) {
                salida = (new StringBuilder()).append(salida).append(linea).append("\n").toString();
            }
            if (null != fr) {
                fr.close();
            }
        } catch (IOException e2) {
            JOptionPane.showMessageDialog(this, e2.getMessage());
        }
        return salida;
    }

    public void guardarArchivo(String ruta, String texto) {
        FileWriter fichero = null;
        fichero = null;
        PrintWriter pw = null;
        try {
            fichero = new FileWriter(ruta);
            pw = new PrintWriter(fichero);
            pw.println(texto);
            if (null != fichero) {
                fichero.close();
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    // End of variables declaration//GEN-END:variables
}
