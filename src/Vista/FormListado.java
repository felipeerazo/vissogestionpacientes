/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.Conn;
import Controlador.CtrlPaciente;
import Modelo.Paciente;
import java.util.LinkedList;
import javax.swing.JOptionPane;

/**
 *
 * @author usuario
 */
public class FormListado extends javax.swing.JFrame {

    LinkedList<Paciente> listaPacientes;
    LinkedList listaControles;
    Conn conn;
    private boolean esNuevaHistoria;
    String cedPaciente;
    private boolean esNuevoMiniControl;

    /**
     * Creates new form FormListado
     */
    public FormListado() {
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(2);
        setTitle("Lista de pacientes");
        listaPacientes = new LinkedList();
        listaControles = new LinkedList();
        conn = new Conn();
        esNuevaHistoria = false;
        esNuevoMiniControl = false;
        cedPaciente = "";
        jLabel1.setText("Se han encontrado los siguientes pacientes:");
    }

    public void cargarPacientes(LinkedList<Paciente> l) {
//        for(; !l.isEmpty(); list1.add((new StringBuilder()).append((String)listaPacientes.getLast()).append(" - ").append((String)l.removeFirst()).toString()))
//            listaPacientes.addLast(l.remove());
        for (int i = 0; i < l.size(); i++) {
            lstVistaPacientes.add(l.get(i).getCc() + " - " + l.get(i).getNombre());
        }
        listaPacientes=l;

    }

    public void cargarTodo() {
        LinkedList<Paciente> l = new CtrlPaciente().listarTodos();
        cargarPacientes(l);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lstVistaPacientes = new java.awt.List();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lstVistaPacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lstVistaPacientesActionPerformed(evt);
            }
        });

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lstVistaPacientes, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lstVistaPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lstVistaPacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lstVistaPacientesActionPerformed
        // TODO add your handling code here:
        if (isEsNuevaHistoria()) {
            Vista.FormHistoria formHistoria = new Vista.FormHistoria();
            formHistoria.setPaciente(listaPacientes.get(lstVistaPacientes.getSelectedIndex()));
            formHistoria.setVisible(true);
            dispose();
        } else if (isEsNuevoMiniControl()) {
            Vista.FormMiniControl formMiniControl = new Vista.FormMiniControl();
            formMiniControl.setPaciente(listaPacientes.get(lstVistaPacientes.getSelectedIndex()));
            formMiniControl.setVisible(true);
            dispose();
        } else {
            try {
                FormPaciente formPaciente = new FormPaciente();
                formPaciente.cargarPaciente(listaPacientes.get(lstVistaPacientes.getSelectedIndex()));
                formPaciente.cargarHistorias();
                formPaciente.cargarMiniControles();
                formPaciente.setVisible(true);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al abrir historia: "+e.toString());
            }
        }
    }//GEN-LAST:event_lstVistaPacientesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormListado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormListado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormListado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormListado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormListado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private java.awt.List lstVistaPacientes;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the esNuevaHistoria
     */
    public boolean isEsNuevaHistoria() {
        return esNuevaHistoria;
    }

    /**
     * @param esNuevaHistoria the esNuevaHistoria to set
     */
    public void setEsNuevaHistoria(boolean esNuevaHistoria) {
        this.esNuevaHistoria = esNuevaHistoria;
    }

    /**
     * @return the esNuevoMiniControl
     */
    public boolean isEsNuevoMiniControl() {
        return esNuevoMiniControl;
    }

    /**
     * @param esNuevoMiniControl the esNuevoMiniControl to set
     */
    public void setEsNuevoMiniControl(boolean esNuevoMiniControl) {
        this.esNuevoMiniControl = esNuevoMiniControl;
    }
}
